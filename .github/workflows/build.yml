name: Deploy site
on:
  push:
    branches:
      master
    paths-ignore:
    - README.md
    - LICENSE

jobs:
  build:
    name: Build generator and compile site
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v25
    - uses: cachix/cachix-action@v13
      with:
        name: meckweb
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - run: nix-build site.nix

    - name: Save Result
      uses: actions/upload-artifact@v4
      with:
        name: site
        path: result

  release:
    name: Create Github release
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Download results
        uses: actions/download-artifact@v4
        with:
          name: site

      - name: zip results
        run: |
          zip -r site.zip .

      - name: Tag Date
        id: tagDate
        run: |
          echo "::set-output name=date::$(date -u +'%Y-%m-%dT%H.%M.%S')"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagDate.outputs.date }}
          release_name: Release ${{ steps.tagDate.outputs.date }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./site.zip
          asset_name: site.zip
          asset_content_type: application/zip

      - name: Invoke deployment hook
        uses: distributhor/workflow-webhook@v1
        env:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: '{ "link": "${{steps.upload-release-asset.outputs.browser_download_url}}" }'
